options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: test
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 624.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 684.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 660.0]
    rotation: 0
    state: enabled
- name: snippet_0
  id: snippet
  parameters:
    alias: ''
    code: "import serial #allows for serial communication to arduino\nfrom serial.tools\
      \ import list_ports #allows for listing of available ports\nimport time #allows\
      \ for time.sleep() function\ndef initialize_arduino_by_serial_number(target_serial_number,\
      \ baudrate=9600, timeout=0.1):\n    ports = list_ports.comports()\n    for port\
      \ in ports:\n        if port.serial_number == target_serial_number:\n      \
      \      try:\n                arduino = serial.Serial(port=port.device, baudrate=baudrate,\
      \ timeout=timeout)\n                print(f\"Arduino connected on {port.device}\"\
      )\n                return arduino\n            except serial.SerialException\
      \ as e:\n                print(f\"Failed to connect to Arduino on {port.device}:\
      \ {e}\")\n                return None\n    print(\"Arduino with specified serial\
      \ number not found. Please check your connection.\")\n    return None\ntarget_serial_number\
      \ = '55431313338351610291'\narduino = initialize_arduino_by_serial_number(target_serial_number)\n\
      time.sleep(2)\narduino.write(b'1')"
    comment: ''
    priority: '0'
    section: main_after_start
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 240.0]
    rotation: 0
    state: enabled
- name: snippet_1
  id: snippet
  parameters:
    alias: ''
    code: "import serial #allows for serial communication to arduino\nfrom serial.tools\
      \ import list_ports #allows for listing of available ports\nimport time #allows\
      \ for time.sleep() function\ndef initialize_arduino_by_serial_number(target_serial_number,\
      \ baudrate=9600, timeout=0.1):\n    ports = list_ports.comports()\n    for port\
      \ in ports:\n        if port.serial_number == target_serial_number:\n      \
      \      try:\n                arduino = serial.Serial(port=port.device, baudrate=baudrate,\
      \ timeout=timeout)\n                print(f\"Arduino connected on {port.device}\"\
      )\n                return arduino\n            except serial.SerialException\
      \ as e:\n                print(f\"Failed to connect to Arduino on {port.device}:\
      \ {e}\")\n                return None\n    print(\"Arduino with specified serial\
      \ number not found. Please check your connection.\")\n    return None\n\ntarget_serial_number\
      \ = '55431313338351610291'\narduino = initialize_arduino_by_serial_number(target_serial_number)\n\
      time.sleep(2)\narduino.write(b'2')"
    comment: ''
    priority: '0'
    section: main_after_stop
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 344.0]
    rotation: 0
    state: enabled

connections:
- [analog_sig_source_x_0, '0', blocks_delay_0, '0']
- [blocks_delay_0, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.9.2
